plugins {
    id 'multiloader-loader'
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'org.jetbrains.kotlin.jvm'
}

repositories {
    mavenCentral()
    maven { url = uri("https://oss.sonatype.org/content/repositories/snapshots") }
    maven { url = uri("https://maven.architectury.dev/") }
    maven { url = uri("https://maven.notenoughupdates.org/releases/") }
    maven { url = uri("https://maven.fabricmc.net") }
    maven { url = uri("https://maven.minecraftforge.net/") }
    maven { url = uri("https://repo.spongepowered.org/maven/") }
    maven { url = uri("https://repo.sk1er.club/repository/maven-releases/") }
    maven { url = uri("https://maven.wagyourtail.xyz/releases") }
    maven { url = uri("https://maven.wagyourtail.xyz/snapshots") }
    maven { url = uri("https://pkgs.dev.azure.com/djtheredstoner/DevAuth/_packaging/public/maven/v1") }
    maven { url = uri("https://maven.xpple.dev/maven2") }
    maven { url = uri("https://maven.terraformersmc.com/releases") }
    maven { url = uri("https://maven.shedaniel.me/") }
    maven { url = uri("https://repo.nea.moe/releases") }
    maven { url = uri("https://jitpack.io") }
    maven { url = uri("https://repo.hypixel.net/repository/Hypixel/") }
}

configurations {
    transitiveInclude {
        exclude group: "com.mojang"
//        exclude group: "org.jetbrains.kotlin"
//        exclude group: "org.jetbrains.kotlinx"
    }
}

dependencies {
    //TODO I am aware of this mess with the dependencies. It is on the thing todo but it launches with IntelliJ
    minecraft "com.mojang:minecraft:${libs.versions.modern.minecraft.get()}"
    mappings "net.fabricmc:yarn:${libs.versions.modern.yarn.get()}:v2"
    modRuntimeOnly(libs.modern.devauth)
    modImplementation(include("dev.xpple:clientarguments:1.8.2"))
    add("transitiveInclude", modImplementation("com.github.JnCrMx:discord-game-sdk4j:latest.release"))
    modImplementation("net.hypixel:mod-api:latest.release")
    modImplementation(libs.modmenu)
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${libs.versions.cloth.get()}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    add("transitiveInclude", modImplementation("javazoom:jlayer:1.0.1"))
    modImplementation "net.fabricmc:fabric-loader:${libs.versions.modern.fabric.loader.get()}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${libs.versions.modern.fabric.api.get()}"
    add("transitiveInclude", modImplementation("net.dv8tion:JDA:5.0.0-beta.23"))
    add("transitiveInclude", modImplementation("me.nullicorn:Nedit:latest.release"))
    modImplementation("moe.nea:neurepoparser:latest.release")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    add("transitiveInclude", modImplementation('org.eclipse.jgit:org.eclipse.jgit:latest.release'))
    include(implementation('org.eclipse.jgit:org.eclipse.jgit:latest.release'))
    implementation('org.eclipse.jgit:org.eclipse.jgit:latest.release')

    configurations.transitiveInclude.resolvedConfiguration.resolvedArtifacts.forEach {
        modImplementation(it.moduleVersion.id.toString())
//        include(it.moduleVersion.id.toString())
    }
}

loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) {
        accessWidenerPath.set(aw)
    }
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }

    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            vmArg("--javaagent ~/.gradle/caches/modules-2/files-2.1/net.fabricmc/sponge-mixin/*/*/*.jar")
            runDir("run")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
    log4jConfigs.from(project.rootProject.file("log4j2.xml"))
}